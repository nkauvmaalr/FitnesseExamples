<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20210410</FitNesseVersion>
  <rootPath>FitnesseExamples.LoginDialogDriver</rootPath>
  <result>
    <counts>
      <right>6</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>1</exceptions>
    </counts>
    <date>2021-05-24T10:37:07+05:30</date>
    <runTimeInMillis>131</runTimeInMillis>
    <content>&lt;br/&gt;&lt;div class="collapsible"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="FitnesseExamples.ImportLibrary"&gt;.FitnesseExamples.ImportLibrary&lt;/a&gt; &lt;a href="FitnesseExamples.ImportLibrary?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;&lt;div class="collapsible closed"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;setup&lt;/p&gt;
	&lt;div&gt;&lt;br/&gt;&lt;span class="meta"&gt;variable defined: TEST_SYSTEM=slim&lt;/span&gt;
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class="meta"&gt;classpath: C:\Users\nkauv\FitnesseExamples\out\production\FitnesseExamples\&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;com.company.Fixtures&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;script&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;login dialog driver&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;Bob&lt;/td&gt;
		&lt;td&gt;xyzzy&lt;/td&gt;
		&lt;td colspan="3"&gt;xyzzy&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor3"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;login with&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;Bob&lt;/td&gt;
		&lt;td&gt;username&lt;/td&gt;
		&lt;td&gt;xyzzy&lt;/td&gt;
		&lt;td&gt;and password&lt;/td&gt;
		&lt;td colspan="2"&gt;xyzzy&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;check&lt;/td&gt;
		&lt;td&gt;login message&lt;/td&gt;
		&lt;td colspan="5"&gt;&lt;span class="pass"&gt;Bob logged in.&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor7"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;reject&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;login with username&lt;/td&gt;
		&lt;td&gt;Bob&lt;/td&gt;
		&lt;td&gt;and&lt;/td&gt;
		&lt;td&gt;bad password&lt;/td&gt;
		&lt;td&gt;password&lt;/td&gt;
		&lt;td&gt;xyzzy&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;check&lt;/td&gt;
		&lt;td&gt;login message&lt;/td&gt;
		&lt;td colspan="5"&gt;&lt;span class="pass"&gt;Bob not logged in.&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor9"&gt;
		&lt;td&gt;check not&lt;/td&gt;
		&lt;td&gt;login message&lt;/td&gt;
		&lt;td colspan="5"&gt;&lt;span class="pass"&gt;Bob logged in&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;check&lt;/td&gt;
		&lt;td&gt;login message and&lt;/td&gt;
		&lt;td&gt;Hello&lt;/td&gt;
		&lt;td&gt;login attempts&lt;/td&gt;
		&lt;td&gt;10&lt;/td&gt;
		&lt;td colspan="2"&gt;Bob not logged in. 2 &lt;span class="error"&gt;No Method loginMessageAndLoginAttempts[2] in class com.company.Fixtures.LoginDialogDriver.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getClass() -&amp;gt; class java.lang.Class
hashCode() -&amp;gt; int
loginMessage() -&amp;gt; class java.lang.String
loginMessageAndLoginAttempts(java.lang.String) -&amp;gt; class java.lang.String
loginWithUsernameAndPassword(java.lang.String, java.lang.String, java.lang.String) -&amp;gt; boolean
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
numberOfLoginAttempts() -&amp;gt; int
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;ensure&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;login with username&lt;/td&gt;
		&lt;td&gt;Bob&lt;/td&gt;
		&lt;td&gt;and password&lt;/td&gt;
		&lt;td&gt;xyzzy&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;xyzzy&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;note&lt;/td&gt;
		&lt;td colspan="6"&gt;this is a comment&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor9"&gt;
		&lt;td&gt;show&lt;/td&gt;
		&lt;td colspan="6"&gt;number of login attempts&lt;/td&gt;
	&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr class="slimRowColor9"&gt;
		&lt;td&gt;$symbol&amp;lt;-[Bob logged in.]&lt;/td&gt;
		&lt;td colspan="6"&gt;login message&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</content>
    <relativePageName>LoginDialogDriver</relativePageName>
    <instructions>
      <instructionResult>
        <instruction>{id='import_0_0', instruction='import', path='com.company.Fixtures'}</instruction>
        <slimResult>pass(com.company.Fixtures)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>import_0_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ImportExpectation</type>
          <evaluationMessage>com.company.Fixtures</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_0', instruction='make', instanceName='scriptTableActor', className='LoginDialogDriver', args=[Bob, xyzzy, xyzzy]}</instruction>
        <slimResult>pass(login dialog driver)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_0</instructionId>
          <col>1</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>login dialog driver</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_1', instruction='call', instanceName='scriptTableActor', methodName='loginWithUsernameAndPassword', args=[Bob, xyzzy, xyzzy]}</instruction>
        <slimResult>pass()</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_1</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ScriptActionExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_2', instruction='call', instanceName='scriptTableActor', methodName='loginMessage', args=[]}</instruction>
        <slimResult>pass(Bob logged in.)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_2</instructionId>
          <col>2</col>
          <row>2</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>Bob logged in.</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_3', instruction='call', instanceName='scriptTableActor', methodName='loginWithUsernameAndPassword', args=[Bob, bad password, xyzzy]}</instruction>
        <slimResult>pass()</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_3</instructionId>
          <col>0</col>
          <row>3</row>
          <type>RejectActionExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_4', instruction='call', instanceName='scriptTableActor', methodName='loginMessage', args=[]}</instruction>
        <slimResult>pass(Bob not logged in.)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_4</instructionId>
          <col>2</col>
          <row>4</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>Bob not logged in.</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_5', instruction='call', instanceName='scriptTableActor', methodName='loginMessage', args=[]}</instruction>
        <slimResult>pass(a=Bob not logged in.;e=Bob logged in)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_5</instructionId>
          <col>2</col>
          <row>5</row>
          <type>RejectedValueExpectation</type>
          <actual>Bob not logged in.</actual>
          <expected>Bob logged in</expected>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_6', instruction='call', instanceName='scriptTableActor', methodName='loginMessageAndLoginAttempts', args=[Hello, 10]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_6</instructionId>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>No Method loginMessageAndLoginAttempts[2] in class com.company.Fixtures.LoginDialogDriver.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getClass() -&gt; class java.lang.Class
hashCode() -&gt; int
loginMessage() -&gt; class java.lang.String
loginMessageAndLoginAttempts(java.lang.String) -&gt; class java.lang.String
loginWithUsernameAndPassword(java.lang.String, java.lang.String, java.lang.String) -&gt; boolean
notify() -&gt; void
notifyAll() -&gt; void
numberOfLoginAttempts() -&gt; int
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_7', instruction='call', instanceName='scriptTableActor', methodName='loginWithUsernameAndPassword', args=[Bob, xyzzy, xyzzy]}</instruction>
        <slimResult>pass()</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_7</instructionId>
          <col>0</col>
          <row>7</row>
          <type>EnsureActionExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_8', instruction='call', instanceName='scriptTableActor', methodName='numberOfLoginAttempts', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>scriptTable_1_8</instructionId>
          <col>0</col>
          <row>9</row>
          <type>ShowActionExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_9', instruction='callAndAssign', symbolName='symbol', instanceName='scriptTableActor', methodName='loginMessage', args=[]}</instruction>
        <slimResult>$symbol&lt;-[Bob logged in.]</slimResult>
        <expectation>
          <instructionId>scriptTable_1_9</instructionId>
          <col>0</col>
          <row>10</row>
          <type>SymbolAssignmentExpectation</type>
          <evaluationMessage>$symbol&lt;-[Bob logged in.]</evaluationMessage>
        </expectation>
      </instructionResult>
    </instructions>
  </result>
  <executionLog>
    <testSystem>slim:fitnesse.slim.SlimService</testSystem>
    <command>java -cp C:\Users\nkauv\FitnesseExamples\out\production\FitnesseExamples\;C:\Users\nkauv\FitnesseExamples\fitnesse-standalone.jar fitnesse.slim.SlimService 1</command>
    <exitCode>0</exitCode>
    <stdOut></stdOut>
    <stdErr></stdErr>
  </executionLog>
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>1</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>528</totalRunTimeInMillis>
</testResults>

