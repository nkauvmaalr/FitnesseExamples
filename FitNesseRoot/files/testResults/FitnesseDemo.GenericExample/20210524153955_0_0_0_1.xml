<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20210410</FitNesseVersion>
  <rootPath>FitnesseDemo.GenericExample</rootPath>
  <result>
    <counts>
      <right>0</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>57</exceptions>
    </counts>
    <date>2021-05-24T15:39:55+05:30</date>
    <runTimeInMillis>170</runTimeInMillis>
    <content>&lt;br/&gt;&lt;div class="collapsible"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="FitnesseDemo.PathAndTestType"&gt;.FitnesseDemo.PathAndTestType&lt;/a&gt; &lt;a href="FitnesseDemo.PathAndTestType?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;&lt;span class="meta"&gt;variable defined: TEST_SYSTEM=slim&lt;/span&gt;
&lt;br/&gt;&lt;span class="meta"&gt;classpath: C:\Users\nkauv\FitnesseExamples\out\production\FitnesseExamples\&lt;/span&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;com.company.Fixtures&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;script:&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;Address&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;123&lt;/td&gt;
		&lt;td&gt;Nutley Street&lt;/td&gt;
		&lt;td&gt;New York&lt;/td&gt;
		&lt;td&gt;21019&lt;/td&gt;
		&lt;td&gt;NY&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;getStreetNo &lt;span class="error"&gt;No Method getStreetNo123[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;123&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;getCity &lt;span class="error"&gt;No Method getCityNewYork[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;New York&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;state=getState &lt;span class="error"&gt;No Method stateGetStateNY[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;NY&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;getFullAddress &lt;span class="error"&gt;No Method getFullAddress123NutleyStreetNewYorkNY21019[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;123 Nutley Street, New York, NY - 21019&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;setStreetNo&lt;/td&gt;
		&lt;td colspan="6"&gt;111&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;setPostcode&lt;/td&gt;
		&lt;td colspan="6"&gt;20133&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;getPostcode &lt;span class="error"&gt;No Method getPostcode20133[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;20133&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;getStreetNo &lt;span class="error"&gt;No Method getStreetNo111[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;111&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;getState &lt;span class="error"&gt;No Method getStateState[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;state=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;setName &lt;span class="error"&gt;No converter for com.company.Fixtures.Address$Name.
Tried&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="6"&gt;John Smith&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;name=getName &lt;span class="error"&gt;No Method nameGetNameJohnSmith[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
getCity() -&amp;gt; class java.lang.String
getClass() -&amp;gt; class java.lang.Class
getFullAddress() -&amp;gt; class java.lang.String
getName() -&amp;gt; class com.company.Fixtures.Address$Name
getPostcode() -&amp;gt; int
getState() -&amp;gt; class java.lang.String
getStreet() -&amp;gt; class java.lang.String
getStreetNo() -&amp;gt; class java.lang.Integer
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&amp;gt; void
setCity(java.lang.String) -&amp;gt; void
setName(com.company.Fixtures.Address$Name) -&amp;gt; void
setPostcode(int) -&amp;gt; void
setState(java.lang.String) -&amp;gt; void
setStreet(java.lang.String) -&amp;gt; void
setStreetNo(java.lang.Integer) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td colspan="5"&gt;John Smith&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;Could not invoke constructor for GenericFixture[2]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;Address$Name&lt;/td&gt;
		&lt;td&gt;name=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;getSurname&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;Smith&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;getFirstname &lt;span class="error"&gt;The instance decisionTable_2.setGetSurname. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_2.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;John &lt;span class="error"&gt;The instance decisionTable_2.setSmith. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;toString &lt;span class="error"&gt;The instance decisionTable_2.setGetSurname. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_2.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;John Smith &lt;span class="error"&gt;The instance decisionTable_2.setSmith. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;Could not invoke constructor for GenericFixture[1]&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="2"&gt;name=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;getSurname&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;Smith&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;getFirstname &lt;span class="error"&gt;The instance decisionTable_3.setGetSurname. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_3.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;John &lt;span class="error"&gt;The instance decisionTable_3.setSmith. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;toString &lt;span class="error"&gt;The instance decisionTable_3.setGetSurname. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_3.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;John Smith &lt;span class="error"&gt;The instance decisionTable_3.setSmith. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;Could not invoke constructor for GenericFixture[2]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;java.lang.String&lt;/td&gt;
		&lt;td colspan="2"&gt;It's a cool fixture&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;toString&lt;/td&gt;
		&lt;td colspan="3"&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;i=indexOf &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;cool &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;this=concat &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;; indeed &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;It's a cool fixture; indeed&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;equals &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;It's a cool fixture; indeed &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;true&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;equalsIgnoreCase &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;blank &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;false&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;str=concat &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;blank &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;It's a cool fixture; indeed&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;equals &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;str= &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;true&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;matches &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;^.*cool fix.*$ &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;true&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;indexOf &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;cool &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;i=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;arr=toCharArray &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="3"&gt; &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;concat &lt;span class="error"&gt;The instance decisionTable_4.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;!!! &lt;span class="error"&gt;The instance decisionTable_4.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;It's a cool fixture; indeed !!!&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;Could not invoke constructor for GenericFixture[2]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;java.lang.String&lt;/td&gt;
		&lt;td&gt;arr=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;toString&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;str=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;toCharArray &lt;span class="error"&gt;The instance decisionTable_5.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_5.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;arr= &lt;span class="error"&gt;The instance decisionTable_5.setStr. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;Could not invoke constructor for GenericFixture[2]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;java.lang.String&lt;/td&gt;
		&lt;td&gt;str=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;toString&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;str=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;toCharArray &lt;span class="error"&gt;The instance decisionTable_6.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_6.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;arr= &lt;span class="error"&gt;The instance decisionTable_6.setStr. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;Could not invoke constructor for GenericFixture[2]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;java.lang.String&lt;/td&gt;
		&lt;td&gt;array:G,e,n,e,r,i,c,F,i,x,t,u,r,e&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;toString&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;GenericFixture&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;toCharArray &lt;span class="error"&gt;The instance decisionTable_7.setToString. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt; &lt;span class="error"&gt;The instance decisionTable_7.set. does not exist&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;G,e,n,e,r,i,c,F,i,x,t,u,r,e &lt;span class="error"&gt;The instance decisionTable_7.setGenericFixture. does not exist&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Generic Fixture &lt;span class="error"&gt;&lt;strong&gt; Generic Fixture: Bad table! DecisionTables should have at least three rows.&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="3"&gt;java.lang.Math&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;abs&lt;/td&gt;
		&lt;td&gt;i=&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;br/&gt;</content>
    <relativePageName>GenericExample</relativePageName>
    <instructions>
      <instructionResult>
        <instruction>{id='import_0_0', instruction='import', path='com.company.Fixtures'}</instruction>
        <slimResult>pass(com.company.Fixtures)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>import_0_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ImportExpectation</type>
          <evaluationMessage>com.company.Fixtures</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_0', instruction='make', instanceName='scriptTableActor', className='Address', args=[123, Nutley Street, New York, 21019, NY]}</instruction>
        <slimResult>pass(Address)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>scriptTable_1_0</instructionId>
          <col>1</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Address</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_1', instruction='call', instanceName='scriptTableActor', methodName='getStreetNo123', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_1</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method getStreetNo123[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_2', instruction='call', instanceName='scriptTableActor', methodName='getCityNewYork', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_2</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method getCityNewYork[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_3', instruction='call', instanceName='scriptTableActor', methodName='stateGetStateNY', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_3</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method stateGetStateNY[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_4', instruction='call', instanceName='scriptTableActor', methodName='getFullAddress123NutleyStreetNewYorkNY21019', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_4</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method getFullAddress123NutleyStreetNewYorkNY21019[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_5', instruction='call', instanceName='scriptTableActor', methodName='setStreetNo', args=[111]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>scriptTable_1_5</instructionId>
          <col>0</col>
          <row>5</row>
          <type>ScriptActionExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_6', instruction='call', instanceName='scriptTableActor', methodName='setPostcode', args=[20133]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>scriptTable_1_6</instructionId>
          <col>0</col>
          <row>6</row>
          <type>ScriptActionExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_7', instruction='call', instanceName='scriptTableActor', methodName='getPostcode20133', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_7</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method getPostcode20133[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_8', instruction='call', instanceName='scriptTableActor', methodName='getStreetNo111', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_8</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method getStreetNo111[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_9', instruction='call', instanceName='scriptTableActor', methodName='getStateState', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_9</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method getStateState[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_10', instruction='call', instanceName='scriptTableActor', methodName='setName', args=[John Smith]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_10</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No converter for com.company.Fixtures.Address$Name.
Tried</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='scriptTable_1_11', instruction='call', instanceName='scriptTableActor', methodName='nameGetNameJohnSmith', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>scriptTable_1_11</instructionId>
          <type>ScriptActionExpectation</type>
          <evaluationMessage>No Method nameGetNameJohnSmith[1] in class com.company.Fixtures.Address.
 Available methods:
equals(java.lang.Object) -&gt; boolean
getCity() -&gt; class java.lang.String
getClass() -&gt; class java.lang.Class
getFullAddress() -&gt; class java.lang.String
getName() -&gt; class com.company.Fixtures.Address$Name
getPostcode() -&gt; int
getState() -&gt; class java.lang.String
getStreet() -&gt; class java.lang.String
getStreetNo() -&gt; class java.lang.Integer
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setAddress(java.lang.Integer, java.lang.String, java.lang.String, int, java.lang.String) -&gt; void
setCity(java.lang.String) -&gt; void
setName(com.company.Fixtures.Address$Name) -&gt; void
setPostcode(int) -&gt; void
setState(java.lang.String) -&gt; void
setStreet(java.lang.String) -&gt; void
setStreetNo(java.lang.Integer) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_0', instruction='make', instanceName='decisionTable_2', className='GenericFixture', args=[Address$Name, name=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_0</instructionId>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Could not invoke constructor for GenericFixture[2]</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_4', instruction='call', instanceName='decisionTable_2', methodName='setGetSurname', args=[getFirstname]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_2.setGetSurname. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_5', instruction='call', instanceName='decisionTable_2', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_2.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_6', instruction='call', instanceName='decisionTable_2', methodName='setSmith', args=[John]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_6</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_2.setSmith. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_9', instruction='call', instanceName='decisionTable_2', methodName='setGetSurname', args=[toString]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_9</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_2.setGetSurname. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_10', instruction='call', instanceName='decisionTable_2', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_10</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_2.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_11', instruction='call', instanceName='decisionTable_2', methodName='setSmith', args=[John Smith]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_11</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_2.setSmith. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_0', instruction='make', instanceName='decisionTable_3', className='GenericFixture', args=[name=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_0</instructionId>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Could not invoke constructor for GenericFixture[1]</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_4', instruction='call', instanceName='decisionTable_3', methodName='setGetSurname', args=[getFirstname]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_3.setGetSurname. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_5', instruction='call', instanceName='decisionTable_3', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_3.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_6', instruction='call', instanceName='decisionTable_3', methodName='setSmith', args=[John]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_6</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_3.setSmith. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_9', instruction='call', instanceName='decisionTable_3', methodName='setGetSurname', args=[toString]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_9</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_3.setGetSurname. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_10', instruction='call', instanceName='decisionTable_3', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_10</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_3.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_11', instruction='call', instanceName='decisionTable_3', methodName='setSmith', args=[John Smith]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_11</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_3.setSmith. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_0', instruction='make', instanceName='decisionTable_4', className='GenericFixture', args=[java.lang.String, It's a cool fixture]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_0</instructionId>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Could not invoke constructor for GenericFixture[2]</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_4', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[i=indexOf]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_5', instruction='call', instanceName='decisionTable_4', methodName='set', args=[cool]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_8', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[this=concat]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_8</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_9', instruction='call', instanceName='decisionTable_4', methodName='set', args=[; indeed]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_9</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_12', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[equals]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_12</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_13', instruction='call', instanceName='decisionTable_4', methodName='set', args=[It's a cool fixture; indeed]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_13</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_16', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[equalsIgnoreCase]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_16</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_17', instruction='call', instanceName='decisionTable_4', methodName='set', args=[blank]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_17</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_20', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[str=concat]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_20</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_21', instruction='call', instanceName='decisionTable_4', methodName='set', args=[blank]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_21</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_24', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[equals]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_24</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_25', instruction='call', instanceName='decisionTable_4', methodName='set', args=[str=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_25</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_28', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[matches]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_28</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_29', instruction='call', instanceName='decisionTable_4', methodName='set', args=[^.*cool fix.*$]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_29</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_32', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[indexOf]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_32</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_33', instruction='call', instanceName='decisionTable_4', methodName='set', args=[cool]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_33</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_36', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[arr=toCharArray]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_36</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_37', instruction='call', instanceName='decisionTable_4', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_37</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_40', instruction='call', instanceName='decisionTable_4', methodName='setToString', args=[concat]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_40</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_4_41', instruction='call', instanceName='decisionTable_4', methodName='set', args=[!!!]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_4_41</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_4.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_5_0', instruction='make', instanceName='decisionTable_5', className='GenericFixture', args=[java.lang.String, arr=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_5_0</instructionId>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Could not invoke constructor for GenericFixture[2]</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_5_4', instruction='call', instanceName='decisionTable_5', methodName='setToString', args=[toCharArray]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_5_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_5.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_5_5', instruction='call', instanceName='decisionTable_5', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_5_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_5.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_5_6', instruction='call', instanceName='decisionTable_5', methodName='setStr', args=[arr=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_5_6</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_5.setStr. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_6_0', instruction='make', instanceName='decisionTable_6', className='GenericFixture', args=[java.lang.String, str=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_6_0</instructionId>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Could not invoke constructor for GenericFixture[2]</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_6_4', instruction='call', instanceName='decisionTable_6', methodName='setToString', args=[toCharArray]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_6_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_6.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_6_5', instruction='call', instanceName='decisionTable_6', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_6_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_6.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_6_6', instruction='call', instanceName='decisionTable_6', methodName='setStr', args=[arr=]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_6_6</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_6.setStr. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_7_0', instruction='make', instanceName='decisionTable_7', className='GenericFixture', args=[java.lang.String, array:G,e,n,e,r,i,c,F,i,x,t,u,r,e]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_7_0</instructionId>
          <type>ConstructionExpectation</type>
          <evaluationMessage>Could not invoke constructor for GenericFixture[2]</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_7_4', instruction='call', instanceName='decisionTable_7', methodName='setToString', args=[toCharArray]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_7_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_7.setToString. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_7_5', instruction='call', instanceName='decisionTable_7', methodName='set', args=[]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_7_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_7.set. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_7_6', instruction='call', instanceName='decisionTable_7', methodName='setGenericFixture', args=[G,e,n,e,r,i,c,F,i,x,t,u,r,e]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_7_6</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>The instance decisionTable_7.setGenericFixture. does not exist</evaluationMessage>
        </expectation>
      </instructionResult>
    </instructions>
  </result>
  <executionLog>
    <testSystem>slim:fitnesse.slim.SlimService</testSystem>
    <command>java -cp C:\Users\nkauv\FitnesseExamples\out\production\FitnesseExamples\;C:\Users\nkauv\FitnesseExamples\fitnesse-standalone.jar fitnesse.slim.SlimService 1</command>
    <exitCode>0</exitCode>
    <stdOut></stdOut>
    <stdErr></stdErr>
  </executionLog>
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>1</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>507</totalRunTimeInMillis>
</testResults>

